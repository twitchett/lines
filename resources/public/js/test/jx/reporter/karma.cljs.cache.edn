{:rename-macros {}, :renames {}, :externs {window {}, Date {prototype {getTime {}}}, goog {string {StringBuffer {prototype {append {}}}}}}, :use-macros {}, :excludes #{}, :name jx.reporter.karma, :imports nil, :requires {cljs.test cljs.test, clojure.data clojure.data, fipp.clojure fipp.clojure}, :cljs.spec/speced-vars [], :uses nil, :defs {karma-info! {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 11, :column 8, :end-line 11, :end-column 19, :private true, :arglists (quote ([m]))}, :private true, :name jx.reporter.karma/karma-info!, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 19, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, coverage-result {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 19, :column 8, :end-line 19, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name jx.reporter.karma/coverage-result, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, indent {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 29, :column 8, :end-line 29, :end-column 14, :private true, :arglists (quote ([n s]))}, :private true, :name jx.reporter.karma/indent, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 14, :method-params ([n s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n s]))}, now {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 26, :column 8, :end-line 26, :end-column 11, :private true, :arglists (quote ([]))}, :private true, :name jx.reporter.karma/now, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, test-var-time-start {:name jx.reporter.karma/test-var-time-start, :file "resources/public/js/test/jx/reporter/karma.cljs", :line 71, :column 1, :end-line 71, :end-column 25, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 71, :column 6, :end-line 71, :end-column 25}, :tag any}, format-diff {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 43, :column 8, :end-line 43, :end-column 19, :private true, :arglists (quote ([indentation assert [c a b & q]]))}, :private true, :name jx.reporter.karma/format-diff, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 19, :method-params ([indentation assert p__11513]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([indentation assert [c a b & q]]))}, start {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 100, :column 7, :end-line 100, :end-column 12, :arglists (quote ([tc total-count]))}, :name jx.reporter.karma/start, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 12, :method-params ([tc total-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tc total-count]))}, format-fn {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 36, :column 8, :end-line 36, :end-column 17, :private true, :arglists (quote ([indentation [c & q]]))}, :private true, :name jx.reporter.karma/format-fn, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 17, :method-params ([indentation p__11505]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([indentation [c & q]]))}, karma {:name jx.reporter.karma/karma, :file "resources/public/js/test/jx/reporter/karma.cljs", :line 7, :column 1, :end-line 7, :end-column 11, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 7, :column 6, :end-line 7, :end-column 11}, :tag any}, karma-complete! {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 22, :column 8, :end-line 22, :end-column 23, :private true, :arglists (quote ([]))}, :private true, :name jx.reporter.karma/karma-complete!, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, format-log {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 58, :column 8, :end-line 58, :end-column 18, :private true, :arglists (quote ([{:keys [expected actual message], :as result}]))}, :private true, :name jx.reporter.karma/format-log, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 18, :method-params ([p__11524]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [expected actual message], :as result}]))}, test-var-result {:name jx.reporter.karma/test-var-result, :file "resources/public/js/test/jx/reporter/karma.cljs", :line 69, :column 1, :end-line 69, :end-column 21, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 69, :column 6, :end-line 69, :end-column 21}, :tag any}, karma? {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([]))}, :name jx.reporter.karma/karma?, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, karma-result! {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 15, :column 8, :end-line 15, :end-column 21, :private true, :arglists (quote ([m]))}, :private true, :name jx.reporter.karma/karma-result!, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, remove-last-new-line {:protocol-inline nil, :meta {:file "/home/tabi/dev/repos/making-art/lines/resources/public/js/test/jx/reporter/karma.cljs", :line 33, :column 8, :end-line 33, :end-column 28, :private true, :arglists (quote ([s]))}, :private true, :name jx.reporter.karma/remove-last-new-line, :variadic false, :file "resources/public/js/test/jx/reporter/karma.cljs", :end-column 28, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}}, :cljs.spec/registry-ref [], :require-macros {karma jx.reporter.karma, jx.reporter.karma jx.reporter.karma, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{= :begin-test-var :ns :name :karma :end-test-var :total :fail :jx.reporter.karma/karma :var :end-run-tests :expected :error :actual :message}, :order [= :expected :actual :message :karma :jx.reporter.karma/karma :begin-test-var :end-test-var :var :ns :name :fail :error :end-run-tests :total]}, :doc nil}